{"version":3,"sources":["logo.svg","firebase.js","services/flashcard.services.js","Components/DrawingCanvas.js","Components/ViewingCanvas.js","Components/CardList.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","ref","fc","push","key","value","child","update","remove","DrawingCanvas","React","useState","tool","setTool","isAnnotating","setIsAnnotating","lines","setLines","annotations","setAnnotations","isDrawing","useRef","handleMouseDown","e","current","pos","target","getStage","getPointerPosition","points","x","y","handleMouseMove","point","lastAnnotation","length","concat","splice","lastLine","handleMouseUp","onChange","onClick","data","FCDataService","create","then","console","log","catch","to","width","window","innerWidth","height","innerHeight","onMouseDown","onMousemove","onMouseup","onPointerDown","onPointerMove","onPointerUp","map","line","i","stroke","strokeWidth","tension","lineCap","globalCompositeOperation","anno","ViewingCanvas","handle","useParams","getAll","get","exists","val","CardList","props","refreshList","bind","setActiveTutorial","removeAllTutorials","onDataChange","state","tutorials","currentTutorial","currentIndex","on","this","off","items","forEach","item","title","description","published","setState","tutorial","index","deleteAll","className","Component","App","from","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.927dfc75.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import firebase from \"firebase\";\r\nimport \"firebase/database\";\r\n\r\nlet config = {\r\n    apiKey: \"AIzaSyBDXlOXdZc0YBlk381vSEz532xKtlFdpK4\",\r\n    authDomain: \"flashcards-1ef94.firebaseapp.com\",\r\n    databaseURL: \"https://flashcards-1ef94-default-rtdb.firebaseio.com\",\r\n    projectId: \"flashcards-1ef94\",\r\n    storageBucket: \"flashcards-1ef94.appspot.com\",\r\n    messagingSenderId: \"517575217487\",\r\n    appId: \"1:517575217487:web:d1c438865b09624ec4b53a\"\r\n  };\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase.database();","import firebase from \"../firebase\";\r\n\r\nconst db = firebase.ref(\"/flashcards\");\r\n\r\nclass FCDataService {\r\n  getAll() {\r\n    return db;\r\n  }\r\n\r\n  create(fc) {\r\n    return db.push(fc);\r\n  }\r\n\r\n  update(key, value) {\r\n    return db.child(key).update(value);\r\n  }\r\n\r\n  delete(key) {\r\n    return db.child(key).remove();\r\n  }\r\n\r\n  deleteAll() {\r\n    return db.remove();\r\n  }\r\n}\r\n\r\nexport default new FCDataService();","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Stage, Layer, Line, Text } from 'react-konva';\r\nimport FCDataService from \"../services/flashcard.services\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n/*\r\nCode from:\r\nhttps://konvajs.org/docs/react/Free_Drawing.html\r\n*/\r\n\r\nconst DrawingCanvas = () => {\r\n  const [tool, setTool] = React.useState('pen');\r\n  const [isAnnotating, setIsAnnotating] = React.useState(false);\r\n  const [lines, setLines] = React.useState([]);\r\n  const [annotations, setAnnotations] = React.useState([]);\r\n  const isDrawing = React.useRef(false);\r\n\r\n  const handleMouseDown = (e) => {\r\n    isDrawing.current = true;\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    if(isAnnotating){\r\n      setAnnotations([...annotations, { tool, points: [pos.x, pos.y] }]);\r\n    }\r\n    else{\r\n      setLines([...lines, { tool, points: [pos.x, pos.y] }]);\r\n    }\r\n    \r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    // no drawing - skipping\r\n    if (!isDrawing.current) {\r\n      return;\r\n    }\r\n    const stage = e.target.getStage();\r\n    const point = stage.getPointerPosition();\r\n\r\n    if(isAnnotating){\r\n      let lastAnnotation = annotations[annotations.length - 1];\r\n      // add point\r\n      lastAnnotation.points = lastAnnotation.points.concat([point.x, point.y]);\r\n\r\n      // replace last\r\n      annotations.splice(annotations.length - 1, 1, lastAnnotation);\r\n      setAnnotations(annotations.concat());\r\n    }\r\n    else{\r\n      let lastLine = lines[lines.length - 1];\r\n      // add point\r\n      lastLine.points = lastLine.points.concat([point.x, point.y]);\r\n\r\n      // replace last\r\n      lines.splice(lines.length - 1, 1, lastLine);\r\n      setLines(lines.concat());\r\n    }\r\n    \r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    isDrawing.current = false;\r\n  };\r\n\r\n  const handleAnnotation = () => {\r\n    if(isAnnotating){\r\n      setIsAnnotating(false);\r\n    }\r\n    else{\r\n      setIsAnnotating(true);\r\n    }\r\n  }\r\n\r\n\r\n  const handleSave = () => {\r\n    let data = {\"Layer1\":lines, \"Layer2\":annotations};\r\n\r\n    FCDataService.create(data)\r\n      .then((ref) => {\r\n        console.log(\"Created new item successfully!\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <select\r\n        value={tool}\r\n        onChange={(e) => {\r\n          setTool(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"pen\">Pen</option>\r\n        <option value=\"eraser\">Eraser</option>\r\n      </select>\r\n      <button onClick={handleSave}>\r\n        Save\r\n      </button>\r\n      <button onClick={handleAnnotation}>\r\n        {!isAnnotating ? \"Annotation On\":\"Annotation Off\"}\r\n      </button>\r\n      <Link to=\"/home\">Home</Link>\r\n\r\n      <Stage\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onPointerDown={handleMouseDown}\r\n        onPointerMove={handleMouseMove}\r\n        onPointerUp={handleMouseUp}\r\n      >\r\n        <Layer>\r\n          {lines.map((line, i) => (\r\n            <Line\r\n              key={i}\r\n              points={line.points}\r\n              stroke=\"#df4b26\"\r\n              strokeWidth={5}\r\n              tension={0.5}\r\n              lineCap=\"round\"\r\n              globalCompositeOperation={\r\n                line.tool === 'eraser' ? 'destination-out' : 'source-over'\r\n              }\r\n            />\r\n          ))}\r\n        </Layer>\r\n        {isAnnotating ?\r\n          <Layer>\r\n          {annotations.map((anno, i) => (\r\n            <Line\r\n              key={i}\r\n              points={anno.points}\r\n              stroke=\"#003186\"\r\n              strokeWidth={5}\r\n              tension={0.5}\r\n              lineCap=\"round\"\r\n              globalCompositeOperation={\r\n                anno.tool === 'eraser' ? 'destination-out' : 'source-over'\r\n              }\r\n            />\r\n          ))}\r\n          </Layer> : null\r\n        }\r\n      </Stage>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrawingCanvas;\r\n\r\n//render(<App />, document.getElementById('root'));","import * as React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Stage, Layer, Line, Text } from 'react-konva';\r\nimport FCDataService from \"../services/flashcard.services\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction ViewingCanvas () {\r\n   const [lines, setLines] = React.useState([]);\r\n   const [isAnnotating, setIsAnnotating] = React.useState(false);\r\n   const [annotations, setAnnotations] = React.useState([]);\r\n   const { handle } = useParams()\r\n\r\n\r\n  React.useEffect(() => {\r\n    FCDataService.getAll().child(`/${handle}`).get()\r\n    .then((value) => {\r\n      if (value.exists()) {\r\n        console.log(value.val());\r\n        setLines(!value.val()[\"Layer1\"] ? []: value.val()[\"Layer1\"]);\r\n        setAnnotations(!value.val()[\"Layer2\"] ? []: value.val()[\"Layer2\"]);\r\n      } else {\r\n        console.log(\"No data available\");\r\n      }\r\n    })\r\n    .catch((e) => {\r\n      console.log(e);\r\n    });\r\n   }, handle)\r\n   \r\n   \r\n   const handleAnnotation = () => {\r\n    if(isAnnotating){\r\n      setIsAnnotating(false);\r\n    }\r\n    else{\r\n      setIsAnnotating(true);\r\n    }\r\n}\r\n   \r\n\r\n   return (\r\n    <div>\r\n        <button onClick={handleAnnotation}>\r\n        {!isAnnotating ? \"Annotation On\":\"Annotation Off\"}\r\n      </button>\r\n      <Link to=\"/home\">Home</Link>\r\n      <Stage\r\n        width={window.innerWidth}\r\n        height={window.innerHeight}\r\n      >\r\n        <Layer>\r\n          {lines.map((line, i) => (\r\n            <Line\r\n              key={i}\r\n              points={line.points}\r\n              stroke=\"#df4b26\"\r\n              strokeWidth={5}\r\n              tension={0.5}\r\n              lineCap=\"round\"\r\n            />\r\n          ))}\r\n        </Layer>\r\n        {isAnnotating ?\r\n          <Layer>\r\n          {annotations.map((anno, i) => (\r\n            <Line\r\n              key={i}\r\n              points={anno.points}\r\n              stroke=\"#003186\"\r\n              strokeWidth={5}\r\n              tension={0.5}\r\n              lineCap=\"round\"\r\n              globalCompositeOperation={\r\n                anno.tool === 'eraser' ? 'destination-out' : 'source-over'\r\n              }\r\n            />\r\n          ))}\r\n          </Layer> : null\r\n        }\r\n      </Stage>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewingCanvas;","import React, { Component } from \"react\";\r\nimport FCDataService from \"../services/flashcard.services\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n//https://www.bezkoder.com/react-firebase-crud/\r\n\r\nexport default class CardList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n    this.onDataChange = this.onDataChange.bind(this);\r\n\r\n    this.state = {\r\n      tutorials: [],\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    FCDataService.getAll().on(\"value\", this.onDataChange);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    FCDataService.getAll().off(\"value\", this.onDataChange);\r\n  }\r\n\r\n  onDataChange(items) {\r\n    let tutorials = [];\r\n\r\n    items.forEach((item) => {\r\n      let key = item.key;\r\n      let data = item.val();\r\n      tutorials.push({\r\n        key: key,\r\n        title: data.title,\r\n        description: data.description,\r\n        published: data.published,\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      tutorials: tutorials,\r\n    });\r\n  }\r\n\r\n  refreshList() {\r\n    this.setState({\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveTutorial(tutorial, index) {\r\n    this.setState({\r\n      currentTutorial: tutorial,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  removeAllTutorials() {\r\n    FCDataService.deleteAll()\r\n      .then(() => {\r\n        this.refreshList();\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { tutorials, currentTutorial, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-6\">\r\n          <h4>Tutorials List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {tutorials &&\r\n              tutorials.map((tutorial, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\r\n                  key={index}\r\n                >\r\n                    <Link to={\"/viewCard/\" + tutorial.key}>{tutorial.key}</Link>\r\n                  \r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllTutorials}\r\n          >\r\n            Remove All\r\n          </button>\r\n          <Link to=\"/addCard\">AddCard</Link>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport DrawingCanvas from './Components/DrawingCanvas';\r\nimport ViewingCanvas from './Components/ViewingCanvas';\r\nimport CardList from './Components/CardList';\r\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <body>\r\n        <Router>\r\n          <Switch>\r\n            <Redirect from=\"/\" exact to=\"/home\" />\r\n            <Route path=\"/home\" component={CardList} />\r\n            <Route path=\"/addCard\" component={DrawingCanvas} />\r\n            <Route path='/viewCard/:handle'>\r\n              <ViewingCanvas />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}